#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'
require 'generic_types'

module GenericService
  class Client
    include ::Thrift::Client

    def hello(request)
      send_hello(request)
      return recv_hello()
    end

    def send_hello(request)
      send_message('hello', Hello_args, :request => request)
    end

    def recv_hello()
      result = receive_message(Hello_result)
      return result.success unless result.success.nil?
      raise result.e unless result.e.nil?
      raise ::Thrift::ApplicationException.new(::Thrift::ApplicationException::MISSING_RESULT, 'hello failed: unknown result')
    end

  end

  class Processor
    include ::Thrift::Processor

    def process_hello(seqid, iprot, oprot)
      args = read_args(iprot, Hello_args)
      result = Hello_result.new()
      begin
        result.success = @handler.hello(args.request)
      rescue GenericException => e
        result.e = e
      end
      write_result(result, oprot, 'hello', seqid)
    end

  end

  # HELPER FUNCTIONS AND STRUCTURES

  class Hello_args
    include ::Thrift::Struct
    REQUEST = 1

    ::Thrift::Struct.field_accessor self, :request
    FIELDS = {
      REQUEST => {:type => ::Thrift::Types::STRUCT, :name => 'request', :class => GenericRequest}
    }

    def struct_fields; FIELDS; end

    def validate
    end

  end

  class Hello_result
    include ::Thrift::Struct
    SUCCESS = 0
    E = 1

    ::Thrift::Struct.field_accessor self, :success, :e
    FIELDS = {
      SUCCESS => {:type => ::Thrift::Types::STRUCT, :name => 'success', :class => GenericResponse},
      E => {:type => ::Thrift::Types::STRUCT, :name => 'e', :class => GenericException}
    }

    def struct_fields; FIELDS; end

    def validate
    end

  end

end

